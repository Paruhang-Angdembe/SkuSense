What is Infrastructure as Code (IaC) & Terrafrom?
- Instead of manually clicking around in the AWS Console to create buckets or roles,
you write declarative configuration files (with a .tf extension)
to define your cloud resources.

Why:
- Repeatability: Re-Apply the same code to rebuild exactly the same setup
- Version Control: Track Changes to your infrastructure alongside yoir applicatoin code.
- Safety: Preview ( terraform plan ) what changes will happen before you apply them.

----- tf
Terraform does two things:

Produces an execution plan (the “dry run”) showing exactly which resources will be created, changed, or destroyed.
Saves that plan into the file named tfplan.

Why Save a Plan to a File (tfplan)?

Determinism: You’re guaranteed that when you apply that exact plan file, Terraform will perform exactly the actions you just reviewed—no surprises.
Separation of Review & Apply: In a team or CI/CD pipeline, one step can be “run plan and have an engineer review it,” and a later step can be “apply the reviewed plan.”
Safety: You avoid race conditions where the real cloud state drifts between your plan and apply steps.

Applying the Saved Plan

To actually create the resources you saw in the plan, run:

terraform apply "tfplan"
What it does: Reads the exact instructions in tfplan and provisions those resources in AWS.
Why use it: You know it’s the same plan you inspected—so there’s no chance Terraform will unexpectedly add or remove something different.


Typical Workflow
terraform init
terraform plan -out=tfplan
Review the output or share it for peer review
terraform apply "tfplan" to make the changes live


-------

What is AWS Glue?
- A managed AWS service for running ETL jobs. It can crawl data sources, infer schemas, 
and run Spark-based scripts to transform data.

It handles provisioining the compute, scalling, and scheduling for you-no servers to managed


